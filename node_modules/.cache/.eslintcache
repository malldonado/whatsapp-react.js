[{"C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\index.js":"1","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\App.js":"2","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\components\\ChatListItem.js":"3","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\components\\ChatIntro.js":"4","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\components\\ChatWindow.js":"5","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\components\\MensageItem.js":"6","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\components\\NewChat.js":"7","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\components\\Login.js":"8","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\Api.js":"9","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\firebaseConfig.js":"10"},{"size":242,"mtime":1659022590822,"results":"11","hashOfConfig":"12"},{"size":3129,"mtime":1660146591086,"results":"13","hashOfConfig":"12"},{"size":838,"mtime":1659024228749,"results":"14","hashOfConfig":"12"},{"size":419,"mtime":1659022590615,"results":"15","hashOfConfig":"12"},{"size":5420,"mtime":1659627664806,"results":"16","hashOfConfig":"12"},{"size":510,"mtime":1659542612792,"results":"17","hashOfConfig":"12"},{"size":1446,"mtime":1660059878959,"results":"18","hashOfConfig":"12"},{"size":494,"mtime":1660146887431,"results":"19","hashOfConfig":"12"},{"size":1049,"mtime":1660148923296,"results":"20","hashOfConfig":"12"},{"size":326,"mtime":1660060573270,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"rorpjd",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"25"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"25"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"25"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"25"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"25"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"25"},"C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\index.js",[],[],[],"C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\App.js",["59","60","61","62"],[],"import React, {useState, useEffect} from 'react';\r\nimport './App.css';\r\n\r\nimport ChatListItem from './components/ChatListItem';\r\nimport ChatIntro from './components/ChatIntro';\r\nimport ChatWindow from './components/ChatWindow';\r\nimport NewChat from './components/NewChat';\r\nimport Login from './components/Login';\r\n\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport ChatIcon from '@material-ui/icons/Chat';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nexport default() => {\r\n\r\n  const [chatlist, setChatlist] = useState([\r\n    {chatId: 1, title: 'Fulano de tal', image: 'https://www.w3schools.com/howto/img_avatar2.png'},\r\n    {chatId: 2, title: 'Fulano de tal', image: 'https://www.w3schools.com/howto/img_avatar2.png'},\r\n    {chatId: 3, title: 'Fulano de tal', image: 'https://www.w3schools.com/howto/img_avatar2.png'},\r\n    {chatId: 4, title: 'Fulano de tal', image: 'https://www.w3schools.com/howto/img_avatar2.png'}\r\n  ]);\r\n  const [activeChat, setActiveChat] = useState({});\r\n  const [user, setUser] = useState(null);\r\n\r\n  const [showNewChat, setShowNewChat] = useState(false);\r\n\r\n  const handleNewChat = () => {\r\n    setShowNewChat(true);\r\n  }\r\n\r\n  const handleLoginData = async (u) => {\r\n    let newUser = {\r\n      id: u.uid,\r\n      name: u.displayName,\r\n      avatar: u.photoURL\r\n    };\r\n    setUser(newUser);\r\n  }\r\n\r\n  if(user === null) {\r\n    return (<Login onReceive={handleLoginData}/>)\r\n  }\r\n\r\n  return (\r\n    <div className='app-window'>\r\n      <div className='sidebar'>\r\n      <NewChat chatlist={chatlist} user={user} show={showNewChat} setShow={setShowNewChat} />\r\n        <header>\r\n          <img className='header--avatar' src={user.avatar}/>\r\n          <div className='header--buttons'>\r\n            <div className='header--btn'>\r\n              <DonutLargeIcon style={{color: '#919191'}}></DonutLargeIcon>\r\n            </div>\r\n            <div onClick={handleNewChat} className='header--btn'>\r\n              <ChatIcon style={{color: '#919191'}}></ChatIcon>\r\n            </div>\r\n            <div className='header--btn'>\r\n              <MoreVertIcon style={{color: '#919191'}}></MoreVertIcon>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        <div className='search'>\r\n          <div className='search--input'>\r\n            <SearchIcon fontSize='small' style={{color: '#919191'}}></SearchIcon>\r\n            <input type=\"search\" placeholder='Procurar ou começar uma nova converça'/>\r\n          </div>\r\n        </div>\r\n        <div className='chatlist'>\r\n          {chatlist.map((item, key)=> (\r\n            <ChatListItem\r\n              key={key}\r\n              data={item}\r\n              active={activeChat.chatId === chatlist[key].chatId}\r\n              onClick={()=>setActiveChat(chatlist[key])}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className='contentArea'>\r\n        {activeChat.chatId !== undefined &&\r\n          <ChatWindow user={user} />\r\n        }\r\n        {activeChat.chatId === undefined &&\r\n          <ChatIntro/>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\components\\ChatListItem.js",["63"],[],"import React from 'react';\r\nimport './ChatListItem.css';\r\n\r\nexport default ({onClick, active, data}) => {\r\n    return (\r\n        <div className={`chatListItem ${active?'active':''}`}\r\n            onClick={onClick}\r\n        >\r\n            <img className=\"chatListItem--avatar\" src={data.image} alt=\"\"/>\r\n            <div className=\"chatListItem--lines\">\r\n                <div className=\"chatListItem--line\">\r\n                    <div className=\"chatListItem--name\">{data.title}</div>\r\n                    <div className=\"chatListItem--date\">19:00</div>\r\n                </div>\r\n                <div className=\"chatListItem--line\">\r\n                    <div className=\"chatListItem--lastMsg\">\r\n                        <p>Opa, tudo bem?</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\components\\ChatIntro.js",["64"],[],"import React from 'react';\r\nimport './ChatIntro.css';\r\n\r\nexport default() => {\r\n    return (\r\n        <div className='chatIntro'>\r\n            <img src='https://whatsapp-clone-web.netlify.app/static/media/intro-connection-light.5690d473.jpg' alt=''/>\r\n            <h1>Mantenha seu celular conectado</h1>\r\n            <h2>O whatsapp conecta ao seu telefone para sincronizar seus mensagens</h2>\r\n        </div>\r\n    );\r\n}","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\components\\ChatWindow.js",["65","66"],[],"import React, {useState, useEffect, useRef} from 'react';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport './ChatWindow.css';\r\nimport MensageItem from './MensageItem';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVertSharp';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\n\r\nexport default ({user}) => {\r\n\r\n  let recognition = null;\r\n\r\n  let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n  if(SpeechRecognition !== undefined) {\r\n    recognition = new SpeechRecognition();\r\n  }\r\n\r\n  const body = useRef();\r\n\r\n  const [emojiOpen, setSmojiOpen] = useState(false)\r\n  const [text, setText] = useState('');\r\n  const [listening, setListening] = useState();\r\n  const [list, setList] = useState([\r\n    {author:123, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'},\r\n    {author:123, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'},\r\n    {author:123, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'},\r\n    {author:123, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'},\r\n    {author:123, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'},\r\n    {author:123, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    if(body.current.scrollHeight > body.current.offsetHeight) {\r\n      body.current.scrollTop = body.current.scrollHeight - body.current.offsetHeight;\r\n    }\r\n  }, [list]);\r\n\r\n  const handleEmojiClick = (e, emojiObject) => {\r\n    setText( text + emojiObject.emoji);\r\n  }\r\n\r\n  const handleOpenEmoji = () => {\r\n    setSmojiOpen(true);\r\n  }\r\n\r\n  const handleCloseEmoji = () => {\r\n    setSmojiOpen(false);\r\n  }\r\n\r\n  const handleMicClick = () => {\r\n    if(recognition !== null) {\r\n\r\n      recognition.onstart = () => {\r\n        setListening(true);\r\n      }\r\n\r\n      recognition.onend = () => {\r\n        setListening(false);\r\n      }\r\n\r\n      recognition.onresult = (e) => {\r\n        setText( e.results[0][0].transcript );\r\n      }\r\n\r\n      recognition.start();\r\n\r\n    }\r\n  }\r\n\r\n  const handleSendClick = () => {\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className=\"chatWindow\">\r\n        <div className=\"chatWindow--header\">\r\n          <div className=\"chatWindow--headerinfo\">\r\n            <img className='chatWindow--avatar' src=\"https://www.w3schools.com/howto/img_avatar2.png\" alt=\"\" />\r\n            <div className=\"chatWindow--name\">Bonie lacerda</div>\r\n          </div>\r\n\r\n          <div className=\"chatWindow--headerbuttons\">\r\n            <div className=\"chatWindow--btn\">\r\n              <SearchIcon style={{color: '#919191'}} />\r\n            </div>\r\n            <div className=\"chatWindow--btn\">\r\n              <AttachFileIcon style={{color: '#919191'}} />\r\n            </div>\r\n            <div className=\"chatWindow--btn\">\r\n              <MoreVertIcon style={{color: '#919191'}} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div ref={body} className=\"chatWindow--body\">\r\n          {list.map((item, key)=>(\r\n            <MensageItem \r\n            key={key}\r\n            data={item}\r\n            user={user}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className='chatWindow--emojiarea' style={{height: emojiOpen ? '200px' : '0'}}>\r\n          <EmojiPicker onEmojiClick={handleEmojiClick}/>\r\n        </div>\r\n\r\n        <div className=\"chatWindow--footer\">\r\n          <div className=\"chatWindow--pre\">\r\n            <div className='chatWindow--btn' onClick={handleCloseEmoji} style={{width: emojiOpen ? 40 : 0}}>\r\n              <CloseIcon style={{color: '#919191'}} />\r\n            </div>\r\n            <div className='chatWindow--btn' onClick={handleOpenEmoji}>\r\n              <InsertEmoticonIcon style={{color: emojiOpen ? '#009688': '#919191'}} />\r\n            </div>\r\n          </div>\r\n          <div className=\"chatWindow--inputarea\">\r\n            <input className='chatWindow--input' type=\"text\" placeholder='Digite uma mensagem' value={text} onChange={e=>setText(e.target.value)} />\r\n          </div>\r\n          <div className=\"chatWindow--pos\">\r\n\r\n            {text === '' && \r\n              <div onClick={handleMicClick} className='chatWindow--btn'>\r\n                <MicIcon style={{color: listening ? '#126ece' : '#919191'}} />\r\n              </div>\r\n            }\r\n            {text !== '' &&  \r\n              <div onClick={handleSendClick} className='chatWindow--btn'>\r\n                <SendIcon style={{color: '#919191'}} />\r\n              </div>\r\n            }\r\n\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\components\\MensageItem.js",[],[],"C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\components\\NewChat.js",["67"],[],"import React, {useState} from 'react'\r\nimport './NewChat.css';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nfunction NewChat({user, chatlist, show, setShow}) {\r\n\r\n  const [list, setList] = useState([\r\n    {id: 123, avatar: 'https://www.w3schools.com/howto/img_avatar2.png', name: 'Matheus Maldonado'},\r\n    {id: 123, avatar: 'https://www.w3schools.com/howto/img_avatar2.png', name: 'Matheus Maldonado'},\r\n    {id: 123, avatar: 'https://www.w3schools.com/howto/img_avatar2.png', name: 'Matheus Maldonado'},\r\n    {id: 123, avatar: 'https://www.w3schools.com/howto/img_avatar2.png', name: 'Matheus Maldonado'}\r\n  ]);\r\n\r\n  const handleClose = () => {\r\n    setShow(false);\r\n  }\r\n\r\n  return (\r\n    <div className='newChat' style={{left: show ? 0 : -415}}>\r\n        <div className=\"newChat--head\">\r\n            <div onClick={handleClose} className=\"newChat--backButton\">\r\n                <ArrowBackIcon style={{color: '#fff'}} />\r\n            </div>\r\n            <div className=\"newChat--headtitle\">Nova Conversa</div>\r\n        </div>\r\n        <div className=\"newChat--list\">\r\n            {list.map((item, key)=> (\r\n                <div className=\"newChat--item\" key={key}>\r\n                    <img className='newChat--itemavatar' src={item.avatar} alt=\"\" />\r\n                    <div className=\"newChat--itemname\">{item.name}</div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default NewChat","C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\components\\Login.js",["68"],[],"C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\Api.js",["69","70","71","72"],[],"C:\\Users\\mathe\\OneDrive\\Desktop\\whatsapp-clone\\src\\firebaseConfig.js",["73"],[],"export default {\r\n    apiKey: \"AIzaSyCihnm_aH_8FNlIAy1SCW-wLxxUXrCuOHU\",\r\n    authDomain: \"whatsappclone-efa57.firebaseapp.com\",\r\n    projectId: \"whatsappclone-efa57\",\r\n    storageBucket: \"whatsappclone-efa57.appspot.com\",\r\n    messagingSenderId: \"830893922476\",\r\n    appId: \"1:830893922476:web:4a7f8adb8e8e06883f2709\"\r\n};\r\n\r\n",{"ruleId":"74","severity":1,"message":"75","line":1,"column":26,"nodeType":"76","messageId":"77","endLine":1,"endColumn":35},{"ruleId":"78","severity":1,"message":"79","line":15,"column":1,"nodeType":"80","endLine":90,"endColumn":2},{"ruleId":"74","severity":1,"message":"81","line":17,"column":20,"nodeType":"76","messageId":"77","endLine":17,"endColumn":31},{"ruleId":"82","severity":1,"message":"83","line":50,"column":11,"nodeType":"84","endLine":50,"endColumn":62},{"ruleId":"78","severity":1,"message":"79","line":4,"column":1,"nodeType":"80","endLine":23,"endColumn":2},{"ruleId":"78","severity":1,"message":"79","line":4,"column":1,"nodeType":"80","endLine":12,"endColumn":2},{"ruleId":"78","severity":1,"message":"79","line":13,"column":1,"nodeType":"80","endLine":161,"endColumn":2},{"ruleId":"74","severity":1,"message":"85","line":28,"column":16,"nodeType":"76","messageId":"77","endLine":28,"endColumn":23},{"ruleId":"74","severity":1,"message":"85","line":7,"column":16,"nodeType":"76","messageId":"77","endLine":7,"endColumn":23},{"ruleId":"74","severity":1,"message":"86","line":1,"column":10,"nodeType":"76","messageId":"77","endLine":1,"endColumn":15},{"ruleId":"74","severity":1,"message":"87","line":19,"column":24,"nodeType":"76","messageId":"77","endLine":19,"endColumn":34},{"ruleId":"74","severity":1,"message":"88","line":19,"column":36,"nodeType":"76","messageId":"77","endLine":19,"endColumn":43},{"ruleId":"74","severity":1,"message":"89","line":24,"column":7,"nodeType":"76","messageId":"77","endLine":24,"endColumn":9},{"ruleId":"78","severity":1,"message":"90","line":26,"column":1,"nodeType":"80","endLine":32,"endColumn":3},{"ruleId":"78","severity":1,"message":"90","line":1,"column":1,"nodeType":"80","endLine":8,"endColumn":3},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'setChatlist' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'setList' is assigned a value but never used.","'async' is defined but never used.","'collection' is defined but never used.","'getDocs' is defined but never used.","'db' is assigned a value but never used.","Assign object to a variable before exporting as module default"]