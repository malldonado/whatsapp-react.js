{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mathe\\\\OneDrive\\\\Desktop\\\\whatsapp-clone\\\\src\\\\components\\\\ChatWindow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport EmojiPicker from 'emoji-picker-react';\nimport './ChatWindow.css';\nimport MensageItem from './MensageItem';\nimport SearchIcon from '@material-ui/icons/Search';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVertSharp';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SendIcon from '@material-ui/icons/Send';\nimport MicIcon from '@material-ui/icons/Mic';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(_ref => {\n  _s();\n\n  let {\n    user\n  } = _ref;\n  let recognition = null;\n  let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\n\n  if (SpeechRecognition !== undefined) {\n    recognition = new SpeechRecognition();\n  }\n\n  const [emojiOpen, setSmojiOpen] = useState(false);\n  const [text, setText] = useState('');\n  const [listening, setListening] = useState();\n  const [list, setList] = useState([{\n    author: 123,\n    body: 'bla bla bla bla'\n  }, {\n    author: 1234,\n    body: 'bla bla bla bla'\n  }, {\n    author: 1234,\n    body: 'bla bla bla bla'\n  }, {\n    author: 1234,\n    body: 'bla bla bla bla'\n  }, {\n    author: 123,\n    body: 'bla bla bla bla'\n  }, {\n    author: 1234,\n    body: 'bla bla bla bla'\n  }, {\n    author: 1234,\n    body: 'bla bla bla bla'\n  }, {\n    author: 1234,\n    body: 'bla bla bla bla'\n  }, {\n    author: 123,\n    body: 'bla bla bla bla'\n  }, {\n    author: 1234,\n    body: 'bla bla bla bla'\n  }, {\n    author: 1234,\n    body: 'bla bla bla bla'\n  }, {\n    author: 1234,\n    body: 'bla bla bla bla'\n  }]);\n\n  const handleEmojiClick = (e, emojiObject) => {\n    setText(text + emojiObject.emoji);\n  };\n\n  const handleOpenEmoji = () => {\n    setSmojiOpen(true);\n  };\n\n  const handleCloseEmoji = () => {\n    setSmojiOpen(false);\n  };\n\n  const handleMicClick = () => {\n    if (recognition !== null) {\n      recognition.onstart = () => {\n        setListening(true);\n      };\n\n      recognition.onend = () => {\n        setListening(false);\n      };\n\n      recognition.onresult = e => {\n        setText(e.results[0][0].transcript);\n      };\n\n      recognition.start();\n    }\n  };\n\n  const handleSendClick = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatWindow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatWindow--header\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatWindow--headerinfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"chatWindow--avatar\",\n          src: \"https://www.w3schools.com/howto/img_avatar2.png\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatWindow--name\",\n          children: \"Bonie lacerda\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatWindow--headerbuttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatWindow--btn\",\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {\n            style: {\n              color: '#919191'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatWindow--btn\",\n          children: /*#__PURE__*/_jsxDEV(AttachFileIcon, {\n            style: {\n              color: '#919191'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatWindow--btn\",\n          children: /*#__PURE__*/_jsxDEV(MoreVertIcon, {\n            style: {\n              color: '#919191'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatWindow--body\",\n      children: list.map((item, key) => /*#__PURE__*/_jsxDEV(MensageItem, {\n        data: item,\n        user: user\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatWindow--emojiarea\",\n      style: {\n        height: emojiOpen ? '200px' : '0'\n      },\n      children: /*#__PURE__*/_jsxDEV(EmojiPicker, {\n        onEmojiClick: handleEmojiClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatWindow--footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatWindow--pre\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatWindow--btn\",\n          onClick: handleCloseEmoji,\n          style: {\n            width: emojiOpen ? 40 : 0\n          },\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {\n            style: {\n              color: '#919191'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chatWindow--btn\",\n          onClick: handleOpenEmoji,\n          children: /*#__PURE__*/_jsxDEV(InsertEmoticonIcon, {\n            style: {\n              color: emojiOpen ? '#009688' : '#919191'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatWindow--inputarea\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"chatWindow--input\",\n          type: \"text\",\n          placeholder: \"Digite uma mensagem\",\n          value: text,\n          onChange: e => setText(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chatWindow--pos\",\n        children: [text === '' && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleMicClick,\n          className: \"chatWindow--btn\",\n          children: /*#__PURE__*/_jsxDEV(MicIcon, {\n            style: {\n              color: listening ? '#126ece' : '#919191'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this), text !== '' && /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleSendClick,\n          className: \"chatWindow--btn\",\n          children: /*#__PURE__*/_jsxDEV(SendIcon, {\n            style: {\n              color: '#919191'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}, \"ufXMfwNKrPqAvaVGwY5sRybUoe4=\");","map":{"version":3,"sources":["C:/Users/mathe/OneDrive/Desktop/whatsapp-clone/src/components/ChatWindow.js"],"names":["React","useState","useEffect","EmojiPicker","MensageItem","SearchIcon","AttachFileIcon","MoreVertIcon","InsertEmoticonIcon","CloseIcon","SendIcon","MicIcon","user","recognition","SpeechRecognition","window","webkitSpeechRecognition","undefined","emojiOpen","setSmojiOpen","text","setText","listening","setListening","list","setList","author","body","handleEmojiClick","e","emojiObject","emoji","handleOpenEmoji","handleCloseEmoji","handleMicClick","onstart","onend","onresult","results","transcript","start","handleSendClick","color","map","item","key","height","width","target","value"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport EmojiPicker from 'emoji-picker-react';\r\nimport './ChatWindow.css';\r\nimport MensageItem from './MensageItem';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVertSharp';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport MicIcon from '@material-ui/icons/Mic';\r\n\r\nexport default ({user}) => {\r\n\r\n  let recognition = null;\r\n\r\n  let SpeechRecognition = window.SpeechRecognition || window.webkitSpeechRecognition;\r\n\r\n  if(SpeechRecognition !== undefined) {\r\n    recognition = new SpeechRecognition();\r\n  }\r\n\r\n  const [emojiOpen, setSmojiOpen] = useState(false)\r\n  const [text, setText] = useState('');\r\n  const [listening, setListening] = useState();\r\n  const [list, setList] = useState([\r\n    {author:123, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'},\r\n    {author:123, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'},\r\n    {author:123, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}, \r\n    {author: 1234, body: 'bla bla bla bla'}\r\n  ]);\r\n\r\n  const handleEmojiClick = (e, emojiObject) => {\r\n    setText( text + emojiObject.emoji);\r\n  }\r\n\r\n  const handleOpenEmoji = () => {\r\n    setSmojiOpen(true);\r\n  }\r\n\r\n  const handleCloseEmoji = () => {\r\n    setSmojiOpen(false);\r\n  }\r\n\r\n  const handleMicClick = () => {\r\n    if(recognition !== null) {\r\n\r\n      recognition.onstart = () => {\r\n        setListening(true);\r\n      }\r\n\r\n      recognition.onend = () => {\r\n        setListening(false);\r\n      }\r\n\r\n      recognition.onresult = (e) => {\r\n        setText( e.results[0][0].transcript );\r\n      }\r\n\r\n      recognition.start();\r\n\r\n    }\r\n  }\r\n\r\n  const handleSendClick = () => {\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className=\"chatWindow\">\r\n        <div className=\"chatWindow--header\">\r\n          <div className=\"chatWindow--headerinfo\">\r\n            <img className='chatWindow--avatar' src=\"https://www.w3schools.com/howto/img_avatar2.png\" alt=\"\" />\r\n            <div className=\"chatWindow--name\">Bonie lacerda</div>\r\n          </div>\r\n\r\n          <div className=\"chatWindow--headerbuttons\">\r\n            <div className=\"chatWindow--btn\">\r\n              <SearchIcon style={{color: '#919191'}} />\r\n            </div>\r\n            <div className=\"chatWindow--btn\">\r\n              <AttachFileIcon style={{color: '#919191'}} />\r\n            </div>\r\n            <div className=\"chatWindow--btn\">\r\n              <MoreVertIcon style={{color: '#919191'}} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"chatWindow--body\">\r\n          {list.map((item, key)=>(\r\n            <MensageItem \r\n            key={key}\r\n            data={item}\r\n            user={user}\r\n            />\r\n          ))}\r\n        </div>\r\n\r\n        <div className='chatWindow--emojiarea' style={{height: emojiOpen ? '200px' : '0'}}>\r\n          <EmojiPicker onEmojiClick={handleEmojiClick}/>\r\n        </div>\r\n\r\n        <div className=\"chatWindow--footer\">\r\n          <div className=\"chatWindow--pre\">\r\n            <div className='chatWindow--btn' onClick={handleCloseEmoji} style={{width: emojiOpen ? 40 : 0}}>\r\n              <CloseIcon style={{color: '#919191'}} />\r\n            </div>\r\n            <div className='chatWindow--btn' onClick={handleOpenEmoji}>\r\n              <InsertEmoticonIcon style={{color: emojiOpen ? '#009688': '#919191'}} />\r\n            </div>\r\n          </div>\r\n          <div className=\"chatWindow--inputarea\">\r\n            <input className='chatWindow--input' type=\"text\" placeholder='Digite uma mensagem' value={text} onChange={e=>setText(e.target.value)} />\r\n          </div>\r\n          <div className=\"chatWindow--pos\">\r\n\r\n            {text === '' && \r\n              <div onClick={handleMicClick} className='chatWindow--btn'>\r\n                <MicIcon style={{color: listening ? '#126ece' : '#919191'}} />\r\n              </div>\r\n            }\r\n            {text !== '' &&  \r\n              <div onClick={handleSendClick} className='chatWindow--btn'>\r\n                <SendIcon style={{color: '#919191'}} />\r\n              </div>\r\n            }\r\n\r\n          </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}